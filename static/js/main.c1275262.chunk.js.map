{"version":3,"sources":["components/Wrapper.js","components/Screen.js","components/ButtonBox.js","components/Button.js","App.js","index.js"],"names":["Wrapper","children","className","Screen","value","mode","max","ButtonBox","Button","onClick","btnValues","App","useState","sign","num","res","calc","setCalc","restClickHandler","e","preventDefault","invertClickHandler","String","Number","percentClickHandler","parseFloat","Math","pow","equalsClickHandler","num1","num2","operation","signClickHandler","target","innerHTML","commaClickHandler","includes","numClickHandler","length","id","init","main","console","log","loaded","container","options","background","color","fpsLimit","interactivity","detectsOn","events","enable","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","flat","map","btn","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1275262.chunk.js","sourcesContent":["import \"./Wrapper.css\";\r\n\r\nconst Wrapper =({children}) =>{\r\n    return <div className='Wrapper'>{ children } </div>;\r\n};\r\n\r\nexport default Wrapper;","import { Textfit } from 'react-textfit';\r\nimport './Screen.css';\r\n\r\nconst Screen = ({value}) =>{\r\n    return (\r\n        <Textfit className='Screen' mode ='single' max={70} >\r\n            {value}\r\n        </Textfit>\r\n    );\r\n};\r\n\r\nexport default Screen;","import './ButtonBox.css';\r\n\r\nconst ButtonBox =({ children}) =>{\r\n    return <div className='buttonBox' > {children} </div>\r\n};\r\n\r\nexport default ButtonBox;","import './Button.css';\r\n\r\nconst Button =({className, value, onClick}) =>{\r\n    return (\r\n        <button className={className} onClick={onClick} >\r\n            {value}\r\n        </button>\r\n    );\r\n};\r\n\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport Wrapper from './components/Wrapper';\r\nimport Screen from './components/Screen';\r\nimport ButtonBox from './components/ButtonBox';\r\nimport Button from './components/Button';\r\nimport Particles from 'react-tsparticles';\r\n\r\nimport './App.css';\r\n\r\nconst btnValues=[\r\n  [\"C\", \"+/-\", \"%\", \"/\"],\r\n  [7, 8, 9, \"X\"], \r\n  [4, 5, 6, \"-\"],\r\n  [1, 2, 3, \"+\"],\r\n  [0, \".\", \"=\"],\r\n];\r\n\r\n\r\n\r\nconst  App = () => {\r\n  let [ calc, setCalc] = useState({\r\n    sign:'',\r\n    num: '0',\r\n    res: '0',\r\n  });\r\n\r\n  const particlesInit = (main) => {\r\n    console.log(main);\r\n\r\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n  };\r\n\r\n  const particlesLoaded = (container) => {\r\n    console.log(container);\r\n  };\r\n  const restClickHandler = (e) =>{\r\n    e.preventDefault();\r\n\r\n    setCalc({\r\n      ...calc, \r\n      num: '0',\r\n      res: '0',\r\n      sign: '',\r\n    });\r\n  };\r\n  const invertClickHandler = (e) =>{\r\n    e.preventDefault();\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num : calc.num !== '0' ? String(Number(calc.num)* -1) : '0',\r\n      res : calc.res !== '0' ? String(Number(calc.res)* -1) : '0',\r\n\r\n    });\r\n  };\r\n  const percentClickHandler = (e) =>{\r\n    e.preventDefault();\r\n    let num = calc.num ? parseFloat(calc.num) : '0';\r\n    let res = calc.res ? parseFloat(calc.res) : '0';\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num : String(num /= Math.pow(100, 1)),\r\n      res: String(res /= Math.pow(100, 1)),\r\n      sign: '',\r\n    });\r\n\r\n  };\r\n  const equalsClickHandler = (e) =>{\r\n    e.preventDefault();\r\n    const calcul = (num1, num2, operation) =>\r\n      operation ==='+'\r\n        ? num1 + num2 \r\n        : operation === '-'\r\n        ? num1 - num2\r\n        : operation === 'X'\r\n        ? num1 * num2\r\n        : num1 / num2 ;\r\n\r\n    if (calc.sign && calc.num){\r\n      setCalc({\r\n        ...calc,\r\n        res: \r\n          calc.num === '0' && calc.sign ==='/'\r\n          ? 'impossible'\r\n          : calcul(Number(calc.res), Number(calc.num), calc.sign),\r\n          sign: '',\r\n          num:'0',\r\n      });\r\n    }  \r\n  };\r\n\r\n\r\n  const signClickHandler = (e) =>{\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n    \r\n    setCalc({\r\n      ...calc,\r\n      sign : value,\r\n      res : calc.num !== '0'? calc.num : calc.res,\r\n      num: '0',\r\n    })\r\n    \r\n  };\r\n  const commaClickHandler = (e) =>{\r\n    e.preventDefault();\r\n    const value = '.';\r\n    setCalc({\r\n      ...calc,\r\n          num: !calc.num.includes('.') ? calc.num + value : calc.num,\r\n    });\r\n  };\r\n\r\n\r\n  const numClickHandler = (e) =>{\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n    if (calc.num.length < 16 ){\r\n      setCalc({\r\n        ...calc,\r\n        num : \r\n              calc.num === '0' && value ==='0'\r\n              ? '0'\r\n              : calc.num ==='0'\r\n              ? value\r\n              : calc.num + value\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n\r\n\r\n  return (\r\n      <div>\r\n         <Particles className=\"particles\"\r\n            id=\"tsparticles\"\r\n            init={particlesInit}\r\n            loaded={particlesLoaded}\r\n            options={{\r\n              background: {\r\n                color: {\r\n                  value: \"#A3C3D9\",\r\n                },\r\n              },\r\n              fpsLimit: 60,\r\n              interactivity: {\r\n                detectsOn: \"canvas\",\r\n                events: {\r\n                  onClick: {\r\n                    enable: true,\r\n                    mode: \"push\",\r\n                  },\r\n                  onHover: {\r\n                    enable: true,\r\n                    mode: \"repulse\",\r\n                  },\r\n                  resize: true,\r\n                },\r\n                modes: {\r\n                  bubble: {\r\n                    distance: 400,\r\n                    duration: 2,\r\n                    opacity: 0.8,\r\n                    size: 40,\r\n                  },\r\n                  push: {\r\n                    quantity: 4,\r\n                  },\r\n                  repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4,\r\n                  },\r\n                },\r\n              },\r\n              particles: {\r\n                color: {\r\n                  value: \"#ffffff\",\r\n                },\r\n                links: {\r\n                  color: \"#ffffff\",\r\n                  distance: 150,\r\n                  enable: true,\r\n                  opacity: 0.5,\r\n                  width: 1,\r\n                },\r\n                collisions: {\r\n                  enable: true,\r\n                },\r\n                move: {\r\n                  direction: \"none\",\r\n                  enable: true,\r\n                  outMode: \"bounce\",\r\n                  random: false,\r\n                  speed: 6,\r\n                  straight: false,\r\n                },\r\n                number: {\r\n                  density: {\r\n                    enable: true,\r\n                    value_area: 800,\r\n                  },\r\n                  value: 80,\r\n                },\r\n                opacity: {\r\n                  value: 0.5,\r\n                },\r\n                shape: {\r\n                  type: \"circle\",\r\n                },\r\n                size: {\r\n                  random: true,\r\n                  value: 5,\r\n                },\r\n              },\r\n              detectRetina: true,\r\n            }}\r\n        />\r\n        <Wrapper>\r\n        <Screen value= {calc.num !== '0'? calc.num : calc.res} />\r\n        <ButtonBox>\r\n          {\r\n            btnValues.flat().map((btn, i) => {\r\n              return (\r\n                <Button \r\n                  key={i}\r\n                  className={btn===\"=\"? \"equals\"\r\n                                      : btn === 'C' || btn ==='+/-' || btn ==='%' || btn ==='/' || btn ==='X' || btn === '-'  || btn ==='+'\r\n                                      ? 'operator'\r\n                                      :''   \r\n                }\r\n                  value={btn}\r\n                  onClick = {\r\n                    btn==='C'\r\n                      ? restClickHandler\r\n                      : btn ==='+/-'\r\n                      ? invertClickHandler\r\n                      : btn === '%'\r\n                      ? percentClickHandler\r\n                      : btn === '='\r\n                      ? equalsClickHandler\r\n                      : btn === '/' || btn === 'X' || btn === '-' || btn === '+'\r\n                      ? signClickHandler\r\n                      : btn ==='.'\r\n                      ? commaClickHandler\r\n                      : numClickHandler\r\n                    }\r\n                />\r\n              );\r\n            })\r\n          }\r\n          \r\n        </ButtonBox>\r\n        </Wrapper>\r\n      </div>\r\n      \r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}